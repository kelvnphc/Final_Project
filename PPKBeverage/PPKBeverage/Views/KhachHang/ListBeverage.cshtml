@using Microsoft.AspNetCore.Mvc.Localization
@model IEnumerable<PPKBeverage.Models.SanPham>
@inject IViewLocalizer Localizer

<h1>@Localizer["hello"]</h1>
@{
    ViewData["Title"] = "Danh sách sản phẩm";
    Layout = "_NewLayout";
    ViewData["ShowFooter"] = true;
}
<div class="container">
    <!-- Filters -->
    <form class="mb-4 filter-form" asp-action="ListBeverage" method="get">
        <div class="form-row d-flex align-items-end justify-content-between">
            <div class="col-md-3">
                <label for="filter1" class="filter-label">Lọc theo tên:</label>
                <input type="text" id="filter1" name="kw" class="form-control filter-input" placeholder="Nhập tên sản phẩm..." />
            </div>
            <div class="col-md-3">
                <label for="filter2" class="filter-label">Lọc theo size:</label>
                <select id="filter2" name="size" class="form-control filter-select">
                    <option value="" disabled selected>Chọn size...</option>
                    <option value="1">Nhỏ</option>
                    <option value="2">Vừa</option>
                    <option value="3">Lớn</option>
                    <option value="4">Nóng</option>
                </select>
            </div>
            <div class="col-md-3">
                <label for="filter3" class="filter-label">Lọc theo giá:</label>
                <input type="number" id="filter3" name="gia" class="form-control filter-input" placeholder="Nhập giá tối đa..." />
            </div>
            <div class="col-md-3">
                <button type="submit" class="btn filter-btn">Lọc</button>
            </div>
        </div>
    </form>

    <div class="product-layout">
        <!-- Left Side: Product Categories -->
        <div class="category-list">
            <h3>Loại sản phẩm</h3>
            <ul>
                <li><a href="/KhachHang/ListBeverage?LoaiId=1">Cà Phê</a></li>
                <li><a href="/KhachHang/ListBeverage?LoaiId=2">Đá xay</a></li>
                <li><a href="/KhachHang/ListBeverage?LoaiId=3">Nước ép</a></li>
                <li><a href="/KhachHang/ListBeverage?LoaiId=4">Trà</a></li>
            </ul>
        </div>


        <!-- Right Side: Products Display and Filters -->
        <div class="products-content">
            <!-- Success Message -->
            @if (ViewData["SuccessMessage"] != null)
            {
                <div class="alert alert-success" role="alert">
                    @ViewData["SuccessMessage"]
                </div>
            }

            <!-- Products Grid -->
            <div class="products-grid">
                @foreach (var item in Model)
                {
                    <div class="product-card">
                        <div class="product-image-container">
                            <img src="@Html.DisplayFor(modelItem => item.Anh)" alt="@Html.DisplayFor(modelItem => item.Ten)" class="product-image" />
                        </div>
                        <div class="product-info">
                            <h5 class="product-name">@Html.DisplayFor(modelItem => item.Ten)</h5>
                            <p class="product-description">@Html.DisplayFor(modelItem => item.MieuTa)</p>
                            <p class="product-size">Size: @Html.DisplayFor(modelItem => item.Size.Ten)</p>
                            <p class="product-price">Giá: @Html.DisplayFor(modelItem => item.Tien)</p>
                            <a class="btn btn-success btn-sm" asp-action="AddToCart" asp-controller="GioHang" asp-route-id="@item.Id">Thêm vào giỏ hàng</a>
                            <a class="btn btn-info btn-sm" asp-action="Details" asp-route-id="@item.Id">Chi tiết</a>
                        </div>
                    </div>
                }
            </div>

            <!-- Pagination -->
            @{
                int totalPages = (int)ViewData["TotalPages"];
                int currentPage = (int)ViewData["CurrentPage"];
                int previousPage = currentPage > 1 ? currentPage - 1 : 1;
                int nextPage = currentPage < totalPages ? currentPage + 1 : totalPages;
                int? currentLoaiId = ViewData["CurrentLoaiId"] as int?;
            }

            <nav aria-label="Page navigation">
                <ul class="pagination justify-content-center">
                    <!-- Nút Previous -->
                    <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                        <a class="page-link" href="/KhachHang/ListBeverage?page=@previousPage&LoaiId=@currentLoaiId" aria-label="Previous">
                            <span aria-hidden="true">&laquo; Trước</span>
                        </a>
                    </li>

                    <!-- Số trang -->
                    @for (int i = 1; i <= totalPages; i++)
                    {
                        <li class="page-item @(i == currentPage ? "active" : "")">
                            <a class="page-link" href="/KhachHang/ListBeverage?page=@i&LoaiId=@currentLoaiId">@i</a>
                        </li>
                    }

                    <!-- Nút Next -->
                    <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                        <a class="page-link" href="/KhachHang/ListBeverage?page=@nextPage&LoaiId=@currentLoaiId" aria-label="Next">
                            <span aria-hidden="true">Tiếp &raquo;</span>
                        </a>
                    </li>
                </ul>
            </nav>

        </div>
    </div>
</div>
<script src="https://www.gstatic.com/dialogflow-console/fast/messenger/bootstrap.js?v=1"></script>
<df-messenger intent="WELCOME"
              chat-title="CSKH-PPK-Coffee"
              agent-id="66dfadc2-e7dc-4761-9ada-f796b9eabad2"
              language-code="vi"></df-messenger>
<!-- Scroll to Top Button -->
<button id="scrollToTop" class="scroll-to-top">
    <i class="fas fa-arrow-up"></i>
</button>

<style>
    /* Scroll to Top Button */
    .scroll-to-top {
        position: fixed;
        bottom: 20px;
        right: 20px;
        background-color: #3498db;
        color: #fff;
        border: none;
        border-radius: 50%;
        width: 50px;
        height: 50px;
        display: flex;
        align-items: center;
        justify-content: center;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
        cursor: pointer;
        transition: background-color 0.3s ease, transform 0.3s ease;
        z-index: 2000;
    }

        .scroll-to-top:hover {
            background-color: #2980b9;
            transform: scale(1.1);
        }

        .scroll-to-top i {
            font-size: 24px;
        }

    .filter-form {
        background-color: #ffffff;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        padding: 20px;
        transition: transform 0.3s, box-shadow 0.3s;
    }

    .filter-form:hover {
        transform: scale(1.02);
        box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
    }

    .filter-label {
        font-weight: bold;
        color: #343a40;
    }

    .filter-input,
    .filter-select {
        border-radius: 4px;
        border: 1px solid #ced4da;
        transition: box-shadow 0.3s;
        margin-bottom: 15px;
    }

    .filter-input:focus,
    .filter-select:focus {
        box-shadow: 0 0 8px rgba(0, 123, 255, 0.5);
        border-color: #80bdff;
    }

    .filter-input:hover {
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        transform: translateY(-2px);
    }

    .filter-btn {
        background-color: #007bff;
        border: none;
        color: #fff;
        font-size: 1rem;
        padding: 10px;
        border-radius: 4px;
        cursor: pointer;
        transition: background-color 0.3s, transform 0.3s;
        width: 100%; /* Đảm bảo nút lọc bằng với các ô nhập liệu */
    }

    .filter-btn:hover {
        background-color: #0056b3;
        transform: scale(1.05);
    }

    .form-row > .col-md-3 {
        margin-bottom: 15px; /* Adds spacing between form elements */
    }

    .product-layout {
        display: grid;
        grid-template-columns: 1fr 3fr;
        gap: 20px;
    }

    .category-list {
        background-color: #f8f9fa;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        transition: box-shadow 0.3s, transform 0.3s;
    }

        .category-list:hover {
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            transform: scale(1.02);
        }

.category-list h3 {
    font-size: 2rem;
    font-family: 'Poppins', sans-serif;
    text-transform: uppercase; /* Transform text to uppercase */
    font-weight: bold;
    text-align: center;
    margin-bottom: 20px;
    background: linear-gradient(90deg, #ff4c4c, #ff8c4c, #ffd14c, #4cff8c, #4cafff, #ff4c4c);
    background-size: 400%;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    color: transparent;
    animation: textShimmer 5s infinite linear;
    text-shadow: 0 0 5px rgba(255, 255, 255, 0.5);
}



.category-list h3:hover {
    text-shadow: 0 0 10px rgba(255, 255, 255, 0.8);
    transform: scale(1.05);
    transition: transform 0.3s;
}



        .category-list ul {
            list-style: none;
            padding: 0;
        }

            .category-list ul li {
                margin-bottom: 10px;
            }

                .category-list ul li a {
                    text-decoration: none;
                    color: #007bff;
                    font-weight: bold;
                    transition: color 0.3s, transform 0.3s;
                    display: inline-block;
                    position: relative;
                }

                    .category-list ul li a::after {
                        content: '';
                        width: 100%;
                        height: 2px;
                        background-color: #007bff;
                        position: absolute;
                        bottom: 0;
                        left: 0;
                        transform: scaleX(0);
                        transform-origin: bottom right;
                        transition: transform 0.3s ease;
                    }

                    .category-list ul li a:hover::after {
                        transform: scaleX(1);
                        transform-origin: bottom left;
                    }

                    .category-list ul li a:hover {
                        color: #0056b3;
                        transform: translateX(5px);
                    }


    .products-content {
        display: flex;
        flex-direction: column;
    }

    .products-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
        gap: 20px;
        margin-top: 20px;
    }

    .product-card {
        background-color: #ffffff;
        border-radius: 8px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        display: flex;
        flex-direction: column;
        transition: transform 0.3s, box-shadow 0.3s;
    }

    .product-card:hover {
        transform: scale(1.02);
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }

    .product-image-container {
        position: relative;
        width: 100%;
        height: 200px;
        overflow: hidden;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .product-image {
        max-width: 100%;
        max-height: 100%;
        object-fit: contain;
        transition: opacity 0.3s;
    }

    .product-card:hover .product-image {
        opacity: 0.8;
    }

    .product-info {
        padding: 15px;
        display: flex;
        flex-direction: column;
    }

    .product-name {
        font-size: 1.25rem;
        font-weight: bold;
        margin-bottom: 10px;
    }

    .product-description {
        font-size: 0.875rem;
        margin-bottom: 10px;
    }

    .product-size,
    .product-price {
        font-size: 0.875rem;
        margin-bottom: 10px;
    }

    .btn {
        margin-right: 5px !important;
        border: 2px solid transparent;
        transition: border-color 0.3s, background-color 0.3s, color 0.3s;
    }

    .btn-success {
        background-color: #28a745;
        border-color: #28a745;
    }

    .btn-success:hover {
        border-color: #1e7e34;
        background-color: #ffffff;
        color: #1e7e34;
    }

    .btn-info {
        background-color: #17a2b8;
        border-color: #17a2b8;
    }

    .btn-info:hover {
        border-color: #117a8b;
        background-color: #ffffff;
        color: #117a8b;
    }

    .pagination .page-item .page-link {
        color: #007bff !important;
    }

    .pagination .page-item .page-link:hover {
        color: #0056b3 !important;
    }

    .pagination .page-item.active .page-link {
        background-color: #007bff !important;
        border-color: #007bff !important;
        color: #ffffff !important;
    }
</style>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        document.querySelectorAll('.category-list ul li a').forEach(link => {
            link.addEventListener('mouseover', () => {
                link.style.color = '#0056b3';
                link.style.transform = 'translateX(5px)';
            });
            link.addEventListener('mouseout', () => {
                link.style.color = '';
                link.style.transform = '';
            });
        });
    });
    document.addEventListener('DOMContentLoaded', function () {
        // Handle hover effect on category links
        document.querySelectorAll('.category-list ul li a').forEach(link => {
            link.addEventListener('mouseover', () => {
                link.style.color = '#0056b3';
                link.style.transform = 'translateX(5px)';
            });
            link.addEventListener('mouseout', () => {
                link.style.color = '';
                link.style.transform = '';
            });
        });

        // Handle search by product name
        document.querySelector('.filter-form').addEventListener('submit', function (event) {
            var kw = document.getElementById('filter1').value.trim();
            if (kw.length > 0) {
                document.getElementById('filter1').value = kw;
            }
        });

        // Scroll to Top button functionality
        const scrollToTopBtn = document.getElementById('scrollToTop');
        window.addEventListener('scroll', function () {
            if (window.pageYOffset > 100) {
                scrollToTopBtn.style.display = 'block';
            } else {
                scrollToTopBtn.style.display = 'none';
            }
        });

        scrollToTopBtn.addEventListener('click', function () {
            window.scrollTo({
                top: 0,
                behavior: 'smooth'
            });
        });
    });


</script>
